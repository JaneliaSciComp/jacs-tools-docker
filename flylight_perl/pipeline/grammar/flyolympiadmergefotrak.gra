# ****************************************************************************
# Resource name:  flyolympiadctrax.gra      
# Written by:     Lowell Umayam
# Revision level: 1.0
# Date released:  2009-04-07
# Description:    This grammar will parse the qualified sbfmf video files
#                 for the Fly Olympiad and allow the generation of ctrax data.
#                 
# ****************************************************************************

# ****************************************************************************
# * Rules (non-terminal productions)                                         *
# ****************************************************************************

start: pathname
{
  my %data = &assign(\%item);
  $data{userid} = getlogin || getpwuid($<);
  # Base directories

  $data{base_dir} = '/groups/sciserv/flyolympiad/Olympiad_Screen/box/02_fotracked';
  $data{fotrak_dir} = $data{base_dir} . '/' . $data{topdir};
  $data{fotrak_output_path} = $data{base_dir} . '/' . $data{topdir} . '/Output';

  opendir(OUTPUT,$data{fotrak_output_path});
  $data{existing_merge} = 'null';
  while (my $filename = readdir(OUTPUT)) {
  	if ($filename =~ /^success/) {
	     $data{existing_merge} = $filename;
	}
  }  
  closedir(OUTPUT);

  $data{fotrak_check_path} = $data{base_dir} . '/' . $data{topdir} . '/Output/' . $data{existing_merge};

  $data{unique_id} = 'mergefotrack-' . $data{topdir};
  $data{unique_id} =~ s/\;/\_/g;  
  $data{unique_id} =~ s/\s+/\_/g;
  $data{unique_id} =~ s/\(/\_/g;
  $data{unique_id} =~ s/\)/\_/g;

  $return = { $item[0] => $data{pathname}, %data };
}

pathname: sourcedir '/' filename
{
  my %data = &assign(\%item);
  $return = { $item[0] => join('/',$data{sourcedir},$data{filename}), %data };
}

# ****************************************************************************
# * Rules (terminal productions)                                             *
# ****************************************************************************

filename: output
{
  $return = { $item[0] => join('',@item[1..$#item]), &assign(\%item) };
}

sourcedir: topdir  
{
  $return = { $item[0] => join('',@item[1..$#item]), &assign(\%item) };
}

# ****************************************************************************
# * Terminals                                                                *
# ****************************************************************************
topdir: /[^\/]+/ | <error: illegal top level directory>
output: /Output/ | <error: illegal Output>
