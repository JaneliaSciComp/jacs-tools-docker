# ****************************************************************************
# Resource name:  zlatic.gra          
# Written by:     Rob Svirskas
# Revision level: 1.0
# Date released:  2009-09-25
# Description:    This grammar will parse Zlatic Lab files.
# ****************************************************************************

# ****************************************************************************
# * Rules (non-terminal productions)                                         *
# ****************************************************************************
start: path
{
  my %data = &assign(\%item);
  $data{userid} = getlogin || getpwuid($<);
  # Base directories
  my $BASE = '/groups/zlatic/zlaticlab/pipeline';
  $data{line_effector} = join '@',@data{qw(line effector)};
  $data{stimpro_animalno} = join '@',@data{qw(stimpro animalno)};
  $data{source_dir} = join '/',$BASE,@data{qw(pipeline)},'tracking-results',@data{qw(tracker line_effector stimpro_animalno datetime)};
  #$data{dest_dir} = join '/',$BASE,@data{qw(pipeline)},'chore-forMMF',@data{qw(tracker line_effector stimpro_animalno datetime)};
  #$data{dest_dir} = join '/','/groups/zlatic/zlaticlab/Screens_Behaviours_Display_and_Analysis/screens',@data{qw(tracker line_effector stimpro_animalno datetime)};
  $data{dest_dir} = join '/','/nrs/zlatic/zlaticlab/Screens_Behaviours_Display_and_Analysis/screens',@data{qw(tracker line_effector stimpro_animalno datetime)};
  # Strip the extension off the file name
  (my $short = $data{file}) =~ s/\@\.summary$//;
  $data{short_file} = $short;
  # Find a .orientation file
  (my $dir = $data{dest_dir}) =~ s/@/\\@/g;
  $data{sentinel_target} = join('/',$dir,$short . '.spine');
  my @list = glob($data{sentinel_target});
  if (scalar @list) {
    ($data{sentinel_file} = $list[0]) =~ s/.+\///;
  }
  else {
    $data{sentinel_file} = join('/',$dir,$short . '.spine');
  }
  $return = { $item[0] => $data{path}, %data };
} | <error: illegal start>

path: pipeline '/tracking-results/' tracker '/' line '@' effector '/' stimpro '@' animalno '/' datetime '/' file
{
  my %data = &assign(\%item);
  $return = { $item[0] => join('/',@data{qw(tracker datetime file)}), %data };
} | <error: illegal path>

file: stack '.' extension
{
  my %data = &assign(\%item);
  $return = { $item[0] => $data{stack} . '.' . $data{extension}, %data };
} | <error: illegal file>

stack: datetime '@' line '@' effector '@' tracker '@' stimpro '@' animalno '@' sequence(?)
{
  my %data = &assign(\%item);
  $return = { %data };
  $item[$#item] = (scalar @{$item[$#item]}) ? $item[$#item][0] : '';
  $return = { $item[0] => join('',$data{datetime},'@',$data{line},
                               @item[4..$#item]), &assign(\%item) };
} | <error: illegal stack>

stack2: datetime '@' line '@' effector '@' tracker '@' stimulus '@' protocol '@' sequence(?)
{
  my %data = &assign(\%item);
  $return = { %data };
  $item[$#item] = (scalar @{$item[$#item]}) ? $item[$#item][0] : '';
  $return = { $item[0] => join('',$data{datetime},'@',$data{line},
                               @item[4..$#item]), &assign(\%item) };
} | <error: illegal stack>

# ****************************************************************************
# * Rules (terminal productions)                                             *
# ****************************************************************************

datetime: date '_' time
{
  $return = { $item[0] => join('',@item[1..$#item]), &assign(\%item) };
} | <error: illegal datetime>

# ****************************************************************************
# * Terminals                                                                *
# ****************************************************************************
date: /\d{4}(?:0[1-9]|1[012])(?:0[1-9]|[12][0-9]|3[01])/ | <error: illegal date>
time: /(?:[01][0-9]|2[0-3])(?:[012345][0-9])(?:[012345][0-9])/ | <error: illegal time>
plate: /[1-9][0-9]{0,2}/ | <error: illegal plate>
well: /[A-H](?:0[1-9]|1[012])/ | <error: illegal well>
vector: /[A-Z]{2}/ | <error: illegal vector>
landing_site: /\d{2}/ | <error: illegal landing site>
line: /[A-Za-z0-9-_]+/ | <error: illegal other line>
effector: /[A-Za-z0-9-_]+/ | <error: illegal effector>
tracker: /t\d+/ | <error: illegal tracker>
pipeline: /[a-z]+/ | <error: illegal pipeline>
animalno: /\d+/ | <error: illegal animal number>
stimpro: /[A-Za-z0-9-_#.]+/ | <error: illegal stimulus/protocol>
stimulus: /[A-Za-z0-9-_]+/ | <error: illegal stimulus>
protocol: /[A-Za-z0-9-_]+/ | <error: illegal protocol>
sequence: /_?\d+/ | <error: illegal sequence number>
type_dir: 'confocalStacks' | 'discovery_confocalStacks'
          | <error: illegal type directory name>
extension: 'blob' | 'summary' | <error: illegal file extension>
